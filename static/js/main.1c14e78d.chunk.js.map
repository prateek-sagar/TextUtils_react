{"version":3,"sources":["components/NavBar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","React","createElement","Fragment","className","concat","toggle","href","brand","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","class","onClick","toggleFunc","for","defaultProps","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Paragraphs","split","length","style","color","heading","value","onChange","event","target","rows","placeholder","newText","toUpperCase","toLowerCase","App","mode","setMode","_useState3","_useState4","enableMode","setEnableMode","pricing","document","body","backgroundColor","modeEnabler","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1c14e78d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nfunction NavBar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.toggle} bg-${props.toggle} px-3 py-1`}\r\n      >\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.brand}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                Home<span className=\"sr-only\"></span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div\r\n          class={`form-check form-switch text-${\r\n            props.toggle === \"dark\" ? \"light\" : \"dark\"\r\n          }`}\r\n        >\r\n          <input\r\n            class=\"form-check-input\"\r\n            onClick={props.toggleFunc}\r\n            type=\"checkbox\"\r\n            id=\"flexSwitchCheckDefault\"\r\n          />\r\n          <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">\r\n            <i\r\n              class={`fa-solid fa-${\r\n                props.toggle === \"light\" ? \"moon\" : \"sun\"\r\n              }    `}\r\n            ></i>{\" \"}\r\n            Mode\r\n          </label>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = { brand: PropTypes.string, pricing: PropTypes.string };\r\n\r\nNavBar.defaultProps = {\r\n  brand: \"Should Be Changed\",\r\n};\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  // const [count, changeCount] = useState();\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n  const handleUpClick = () => {\r\n    // console.log(\"Clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n\r\n  function Paragraphs() {\r\n    if (text === \"\") {\r\n      return <p>0 number of Paragraphss.</p>;\r\n    }\r\n    return <p>{text.split(\"\\n\").length} number of Paragraphss.</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"form-group container my-3 container\"\r\n        style={{ color: props.toggle === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <textarea\r\n          className=\"form-control mt-3\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          id=\"myBox\"\r\n          rows=\"10\"\r\n          placeholder=\"Text here...\"\r\n        ></textarea>\r\n        <button\r\n          className=\"btn btn-outline-primary my-3 mx-2\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to uppercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-primary my-3 mx-2\"\r\n          onClick={handleLowClick}\r\n        >\r\n          Convert to lowercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-primary my-3 mx-2\"\r\n          onClick={handleClear}\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.toggle === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Summary</h2>\r\n        <p>{text.length} number of characters.</p>\r\n        <Paragraphs />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [enableMode, setEnableMode] = useState(\"Dark\");\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      setEnableMode(\"Light\");\n      document.body.style.backgroundColor = \"rgb(7, 15, 57)\";\n    } else {\n      setMode(\"light\");\n      setEnableMode(\"Dark\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n  return (\n    <>\n      <NavBar\n        brand=\"TextUtils\"\n        pricing=\"Pricing\"\n        toggle={mode}\n        toggleFunc={toggleMode}\n        modeEnabler={enableMode}\n      />\n      <TextForm heading=\"Enter the text to analyze\" toggle={mode} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}